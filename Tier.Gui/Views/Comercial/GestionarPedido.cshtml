@model Tier.Gui.CotizarService.PedidoModel

@{
    ViewBag.Title = "CrearPedido";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    Tier.Gui.CotizarService.Cliente objCliente = (Tier.Gui.CotizarService.Cliente)ViewBag.Cliente;
    Tier.Gui.CotizarService.Cotizacion objCotizacion = (Tier.Gui.CotizarService.Cotizacion)ViewBag.Cotizacion;
    IEnumerable<Tier.Gui.CotizarService.Cartera> lstCartera = (IEnumerable<Tier.Gui.CotizarService.Cartera>)ViewBag.Cartera;

    Tier.Gui.CotizarService.Parametro objParamIva = Tier.Gui.SAL.Periodos.RecuperarParametroXIdPeriodoNombre((int)objCotizacion.periodo_idPeriodo, "IVA");
    Single porceiva = objParamIva != null ? (Single)objParamIva.valornumero : 16;
}

<div class="col-md-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Gestionar pedido</h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a href="@Url.Action("GestionComercial", "Comercial", new { id = objCliente.idcliente }, null)"><i class="fa fa-close"></i> Cerrar</a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            @using (Html.BeginForm("CrearPedido", "Comercial", null, FormMethod.Post, new { @class = "form-horizontal form-label-left", id = "frmGestionarPedido" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.hfddetalle)
                @Html.HiddenFor(model => model.cotizacion_idcotizacion)

                @*Encabezado datos objCliente +  cotizacion*@
                <div class="form-group">
                    <div class="col-xs-12 invoice-header">
                        <h1>
                            <i class="fa fa-building"></i> @objCliente.nombre
                        </h1>
                    </div>
                    <div class="row invoice-info">
                        <div class="col-md-12 col-sm-12 col-xs-12 invoice-col">
                            <address>
                                <strong>Identificación:&nbsp;</strong>@objCliente.identificacion
                                <strong>Dirección:&nbsp;</strong> @objCliente.direccion
                                <strong>Ciudad:&nbsp;</strong> @objCliente.municipio_desmunicipio
                                <strong>Departamento:&nbsp;</strong>@objCliente.municipio_departamento_descdepartamento <br /><strong>
                                    Cotización:&nbsp;<a href="@Url.Action("ConsultarCotizacion", "Comercial", new { id = objCotizacion.idcotizacion })" class="customlink" target="_blank" title="Ver cotización">
                                        @objCotizacion.idcotizacion
                                        <i class="fa fa-external-link"></i>
                                    </a>
                                </strong><strong>Fecha:&nbsp;</strong> @objCotizacion.fechacreacion
                                <strong>Observaciones:&nbsp;</strong> @(string.IsNullOrEmpty(objCotizacion.observaciones) ? "-" : objCotizacion.observaciones)
                            </address>
                        </div>
                    </div>
                </div>
                <div class="ln_solid"></div>
                @*Consecutivo SIIGO y Estado*@
                <div class="form-group">
                    <div class="col-md-4 col-sm-4 col-xs-4 form-group pull-right">
                        @Html.LabelFor(model => model.identificadorsiigo, new { @class = "control-label col-md-6 col-sm-6 col-xs-6" })
                        <div class="col-md-6 col-sm-6 col-xs-6 form-group">
                            @if (string.IsNullOrEmpty(Model.identificadorsiigo))
                            {
                                @Html.TextBoxFor(model => model.identificadorsiigo, new { @class = "form-control", data_val_number = "The field ID SIIGO must be a number.", data_val = "true", data_val_required = "Dato requerido" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.identificadorsiigo, new { @class = "form-control", data_val_number = "The field ID SIIGO must be a number.", data_val = "true", data_val_required = "Dato requerido", @readonly = "readonly" })
                            }
                            <span class="field-validation-valid" data-valmsg-for="identificadorsiigo" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-4 form-group pull-left">
                        @Html.HiddenFor(model => model.itemlista_iditemlista_estado)
                        @if (Model.itemlista_iditemlista_estado != null)
                        {
                            <h3>Estado: @Tier.Gui.SAL.ItemsListas.RecuperarItemListaXId((int)Model.itemlista_iditemlista_estado).nombre</h3>
                        }
                        else
                        {
                            <h3>Estado: N/A</h3>
                        }
                    </div>
                </div>
                @*Tabla pedido*@
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <table id="tblPedido">
                            <thead>
                                <tr>
                                    <th style="text-align:right;">Cantidad</th>
                                    <th>Cod Producto</th>
                                    <th>Referencia</th>
                                    <th>Cartón</th>
                                    <th>Troquel</th>
                                    <th>Observaciones</th>
                                    <th style="text-align:right;">Vr. Unitario</th>
                                    <th style="text-align:right;">Vr. Parcial</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.detalle)
                                {
                                    Tier.Gui.CotizarService.CotizacionDetalle objCD = objCotizacion.detalle.Where(ee => ee.idcotizacion_detalle == item.cotizacion_detalle_idcotizacion_detalle).FirstOrDefault();
                                    Tier.Gui.CotizarService.Producto objProd = Tier.Gui.SAL.Productos.RecuperarXId((int)objCD.producto_idproducto);

                                    <tr style="height:60px;">
                                        <td class="text-center">
                                            <input type="text" readonly="readonly"
                                                   class="txtCantProd form-control pull-right"
                                                   data-cd="@objCD.idcotizacion_detalle"
                                                   data-producto="@objCD.producto_idproducto"
                                                   data-vunitario="@objCD.costonetocaja"
                                                   data-pedmin="@objCD.escala"
                                                   data-pedmax="@Tier.Gui.Helpers.CustomHtmlHelpers.ObtenerCantidadMaxPedido(objCotizacion.detalle, objCD)"
                                                   value="@item.cantidad"
                                                   style="text-align:right; width:60px;" />
                                        </td>
                                        <td>@objCD.producto_idproducto</td>
                                        <td>
                                            <div class="customlink" data-toggle="modal" data-target=".bs-example-modal-sm3"
                                                 onclick="Comercial.CargarDetalleProdCoti(this);" data-idprodescala="@objCD.producto_idproducto"
                                                 title="Clic para detalles">
                                                <span>@objProd.referenciacliente</span>
                                            </div>
                                        </td>
                                        <td>@Tier.Gui.SAL.Insumos.RecuperarXId((int)objProd.insumo_idinsumo_material).nombre</td>
                                        <td>@Tier.Gui.SAL.Troqueles.RecuperarXId((int)objProd.troquel_idtroquel).descripcion</td>
                                        <td>@objCD.observaciones</td>
                                        <td style="text-align:right;">$&nbsp;@objCD.costonetocaja</td>
                                        <td style="text-align:right;">$&nbsp;<span class="vParcialProd" data-producto="@objCD.producto_idproducto"></span></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @*Observaciones y resumen de pedido*@
                <div class="form-group">
                    <div class="col-md-8 col-sm-12 col-xs-12 form-group">
                        @Html.TextAreaFor(model => model.observaciones, new { @class = "form-control has-feedback-left", placeholder = "Observaciones generales" })
                    </div>
                    <div class="col-md-4 col-sm-12 col-xs-12 text-right">
                        <table class="pull-right" style="margin-right:11px;">
                            <tr>
                                <td style="text-align:right;">@Html.LabelFor(model => model.costosplancha):&nbsp;&nbsp;&nbsp;$&nbsp;</td>
                                <td style="text-align:right;"><span id="lblCostosPlanchas"></span></td>
                                @Html.HiddenFor(model => model.costosplancha)
                            </tr>
                            <tr style="border-bottom: 1px dashed">
                                <td style="text-align:right;">@Html.LabelFor(model => model.costostroqueles):&nbsp;&nbsp;&nbsp;$&nbsp;</td>
                                <td style="text-align:right;"><span id="lblCostosTroqueles"></span></td>
                                @Html.HiddenFor(model => model.costostroqueles)
                            </tr>
                            <tr>
                                <td style="text-align:right;">SUBTOTAL:&nbsp;&nbsp;&nbsp;$&nbsp;</td>
                                <td style="text-align:right;"><span id="lblSubtotalPedido"></span></td>
                            <tr style="border-bottom: 1px solid">
                                <td style="text-align:right;">I.V.A (@porceiva%):&nbsp;&nbsp;&nbsp;$&nbsp;</td>
                                <td style="text-align:right;">
                                    <span id="lblImpuestoPedido"></span>
                                    @Html.Hidden("impuestoPedido", porceiva)
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align:right;">TOTAL:&nbsp;&nbsp;&nbsp;$&nbsp;</td>
                                <td style="text-align:right;"><span id="lblTotalPedido"></span></td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="ln_solid"></div>
                @*Opciones pedido*@
                <div class="form-group">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        @if (Model.itemlista_iditemlista_estado == (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Creacion
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Terminado)
                        {
                            <div class="btn-group">
                                @Html.ActionLink("Orden de producción", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.EnFabricacion }, new { @class = "btn btn-primary lnkObserv" })
                            </div>
                        }
                        @if (Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Creacion
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Cancelado
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Terminado)
                        {
                            <div class="btn-group">
                                @Html.ActionLink("Formato orden producción", "ReporteOrdenProduccion", "Comercial", new { id = Model.idpedido }, new { @class = "btn btn-primary" })
                            </div>
                        }
                        @if (Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Cancelado
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Terminado)
                        {
                            <div class="btn-group">
                                <button type="button" class="btn btn-danger" style="width: 144px;">Bloqueos</button>
                                <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    <li>
                                        @Html.ActionLink("Bloquear por cartera", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.BloqueadoCartera }, new { @class = "lnkObserv" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Bloquear por materiales", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.BloqueadoMaterial }, new { @class = "lnkObserv" })
                                    </li>
                                    <li class="divider"></li>
                                    <li>
                                        @Html.ActionLink("Cancelar", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Cancelado }, new { @class = "lnkObserv" })
                                    </li>
                                </ul>
                            </div>
                        }
                        @if (Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Creacion
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Cancelado
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Terminado)
                        {
                            <div class="btn-group">
                                <button type="button" class="btn btn-info" style="width: 132px;">Logística</button>
                                <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                    <span class="caret"></span>
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    <li>
                                        @Html.ActionLink("En Fabricación", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.EnFabricacion }, new { @class = "lnkObserv" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Despachado", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Despachado }, new { @class = "lnkObserv" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Entregado", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Entregado }, new { @class = "lnkObserv" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Devuelto", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Devuelto }, new { @class = "lnkObserv" })
                                    </li>
                                </ul>
                            </div>
                        }
                        @if (Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Creacion &&
                            Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.BloqueadoCartera
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.BloqueadoMaterial
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Cancelado
                            && Model.itemlista_iditemlista_estado != (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Terminado)
                        {
                            <div class="btn-group">
                                @Html.ActionLink("Finalizar", "CambiarEstadoPedido", "Comercial", new { id = Model.idpedido, estado = (int)Tier.Gui.Models.Enumeradores.EstadosPedido.Terminado }, new { @class = "btn btn-success lnkObserv" })
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*Modal para el detalle del producto*@
<div tabindex="-3" class="modal fade bs-example-modal-sm3" role="dialog" aria-hidden="true" style="display: none" data-backdrop="static">
    <div class="modal-dialog" style=" max-width: 600px;">
        @*Modal content*@
        <div class="modal-content">
            <form action="" method="post" id="frmDetalleProdCotizacion">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Detalle producto</h4>
                </div>
                <div id="trgCotProDet" class="modal-body"></div>
                <div class="col-md-12">
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@*Modal para el detalle de la cartera*@
<div tabindex="-3" class="modal fade bs-example-modal-sm4" role="dialog" aria-hidden="true" style="display: none" data-backdrop="static">
    <div class="modal-dialog" style=" width: 800px;">
        @*Modal content*@
        <div class="modal-content">
            <form action="" method="post" id="frmDetalleProdCotizacion">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Detalle cartera en mora</h4>
                </div>
                <div id="trgDetalleCartera" class="modal-body">
                    @if (lstCartera != null && lstCartera.Count() > 0)
                    {
                        @Html.Partial("_TablaCarteraProcesamientoLote", lstCartera);
                    }
                </div>
                <div class="col-md-12">
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $("#tblPedido").DataTable({
        "paging": false,
        "ordering": false,
        "info": false,
        "searching": false
    });

    $(document).ready(function () {
        Comercial.CalcularValoresPedido();

        $(".lnkObserv").click(function () {
            if ($("#frmGestionarPedido").valid()) {
                var obs = $("#observaciones").val();
                var idsiigo = $("#identificadorsiigo").val();
                this.href = this.href + '&observ=' + encodeURIComponent(obs) + '&idsiigo=' + encodeURIComponent(idsiigo);
            }
            else {
                return false;
            }
        });
    });
</script>

@*Notificacion alerta cartera en mora*@
@if (lstCartera != null && lstCartera.Count() > 0)
{
    <script>
        $(document).ready(function () {
            var cnt = 10;
            TabbedNotification = function (options) {
                var message = "<div id='ntf" + cnt + "' class='text alert-" + options.type + "' style='display:none'><h2><i class='fa fa-bell'></i> " + options.title +
                  "</h2><p>" + options.text + "</p></div>";

                if (!document.getElementById('custom_notifications')) {
                    alert('doesnt exists');
                } else {
                    $('#custom_notifications ul.notifications').append("<li><a id='ntlink" + cnt + "' class='alert-" + options.type + "' href='#ntf" + cnt + "'><i class='fa fa-bell animated shake'></i></a></li>");
                    $('#custom_notifications #notif-group').append(message);
                    cnt++;
                    CustomTabs(options);
                }
            };

            CustomTabs = function (options) {
                $('.tabbed_notifications > div').hide();
                $('.tabbed_notifications > div:first-of-type').show();
                $('#custom_notifications').removeClass('dsp_none');
                $('.notifications a').click(function (e) {
                    e.preventDefault();
                    var $this = $(this),
                      tabbed_notifications = '#' + $this.parents('.notifications').data('tabbed_notifications'),
                      others = $this.closest('li').siblings().children('a'),
                      target = $this.attr('href');
                    others.removeClass('active');
                    $this.addClass('active');
                    $(tabbed_notifications).children('div').hide();
                    $(target).show();
                });
            };

            CustomTabs();

            new TabbedNotification({
                title: 'Advertencia',
                text: 'Se ha detectado que el cliente presenta mora en sus obligaciones. Antes de proceder con la creación del pedido, por favor consulte con la Dirección de Mercadeo.',
                type: 'warning',
                sound: false
            })
        });
    </script>
}