@model Tier.Gui.CotizarService.InsumoMetadata

@{
    ViewBag.Title = "Crear Insumo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Nuevo insumo</h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a href="@Url.Action("ListaInsumos", "Produccion")"><i class="fa fa-close"></i> Cerrar</a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">
            @using (Html.BeginForm("CrearInsumo", "Produccion", null, FormMethod.Post, new { @class = "form-horizontal form-label-left", id = "frmCrearInsumo" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("editando", false)
                <div class="form_wizard wizard_horizontal" id="wizard">
                    @*Cabeceras Secciones*@
                    <ul class="wizard_steps anchor">
                        <li>
                            <a class="selected" href="#step-1" rel="1" isdone="1">
                                <span class="step_no">1</span>
                                <span class="step_descr">
                                    Datos básicos<br>
                                    <small></small>
                                </span>
                            </a>
                        </li>
                        <li>
                            <a class="disabled" href="#step-2" rel="2" isdone="0">
                                <span class="step_no">2</span>
                                <span class="step_descr">
                                    Cantidades y Precios<br>
                                    <small></small>
                                </span>
                            </a>
                        </li>
                    </ul>
                    @*Contenedores*@
                    <div class="stepContainer">
                        <div class="wizard_content" id="step-1" style="display: block;">
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-6 form-group has-feedback cursorno-drop">
                                    @Html.DropDownListFor(model => model.empresa_idempresa, null, " -- Empresa -- ", new { @class = "form-control has-feedback-left empresaSL" })
                                    @Html.ValidationMessageFor(model => model.empresa_idempresa)
                                    <span class="fa fa-building form-control-feedback left" aria-hidden="true"></span>
                                </div>
                                <div class="col-md-6 col-sm-6 col-xs-6 form-group">
                                    @Html.DropDownListFor(model => model.itemlista_iditemlista_tipo, (SelectList)ViewBag.itemlista_iditemlista_tipo, " -- Tipo -- ", new { @class = "form-control has-feedback-left" })
                                    @Html.ValidationMessageFor(model => model.itemlista_iditemlista_tipo)
                                    <span class="fa fa-tag form-control-feedback left" aria-hidden="true"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-6 form-group has-feedback">
                                    @Html.DropDownListFor(model => model.proveedor_linea_proveedor_idproveedor, null, " -- Proveedor -- ", new { @class = "form-control has-feedback-left", onchange = "Produccion.RecuperarLineasProveedor('proveedor_linea_proveedor_idproveedor','proveedor_linea_idproveedor_linea');" })
                                    @Html.ValidationMessageFor(model => model.proveedor_linea_proveedor_idproveedor)
                                    <span class="fa fa-building form-control-feedback left" aria-hidden="true"></span>
                                </div>
                                <div class="col-md-6 col-sm-6 col-xs-6 form-group has-feedback">
                                    @Html.DropDownListFor(model => model.proveedor_linea_idproveedor_linea, null, " -- Linea -- ", new { @class = "form-control has-feedback-left" })
                                    @Html.ValidationMessageFor(model => model.proveedor_linea_idproveedor_linea)
                                    <span class="fa fa-cubes form-control-feedback left" aria-hidden="true"></span>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12 col-sm-12 col-xs-12 form-group">
                                    @Html.TextBoxFor(model => model.nombre, new { @class = "form-control has-feedback-left", placeholder = "Nombre" })
                                    @Html.ValidationMessageFor(model => model.nombre)
                                    <span class="fa fa-eye form-control-feedback left" aria-hidden="true"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="stepContainer">
                        <div class="wizard_content" id="step-2" style="display: block;">
                            <div class="form-group">
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.calibre, new { @class = "control-label col-md-4 col-sm-3 col-xs-12" })
                                    <div class="col-md-8 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(model => model.calibre, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.calibre)
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.ancho, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-md-9 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(model => model.ancho, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ancho)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.valor, new { @class = "control-label col-md-4 col-sm-3 col-xs-12" })
                                    <div class="col-md-8 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(model => model.valor, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.valor)
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.itemlista_iditemlista_unimedcomp, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-md-9 col-sm-12 col-xs-12 form-group has-feedback">
                                        @Html.DropDownListFor(model => model.itemlista_iditemlista_unimedcomp, null, " -- Unidad medida -- ", new { @class = "form-control has-feedback-left" })
                                        @Html.ValidationMessageFor(model => model.itemlista_iditemlista_unimedcomp)
                                        <span class="fa fa-tachometer form-control-feedback left" aria-hidden="true"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.factorrendimiento, new { @class = "control-label col-md-4 col-sm-3 col-xs-12" })
                                    <div class="col-md-8 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(model => model.factorrendimiento, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.factorrendimiento)
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.itemlista_iditemlista_unimedrendi, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-md-9 col-sm-142 col-xs-12 form-group has-feedback">
                                        @Html.DropDownListFor(model => model.itemlista_iditemlista_unimedrendi, null, " -- Unidad rendimiento -- ", new { @class = "form-control has-feedback-left" })
                                        @Html.ValidationMessageFor(model => model.itemlista_iditemlista_unimedrendi)
                                        <span class="fa fa-tachometer form-control-feedback left" aria-hidden="true"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.valorflete, new { @class = "control-label col-md-4 col-sm-3 col-xs-12" })
                                    <div class="col-md-8 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(model => model.valorflete, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.valorflete)
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12 col-xs-12 form-group">
                                    @Html.LabelFor(model => model.conversionflete, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                                    <div class="col-md-9 col-sm-12 col-xs-12 form-group">
                                        @Html.TextBoxFor(model => model.conversionflete, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.conversionflete)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12 col-sm-6 col-xs-6 form-group has-feedback">
                                    @Html.LabelFor(model => model.observaciones, new { @class = "control-label" })
                                </div>
                                <div class="col-md-12 col-sm-6 col-xs-6 form-group has-feedback">
                                    @Html.TextAreaFor(model => model.observaciones, 2, 10, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.observaciones)
                                </div>
                            </div>
                            <span class="label label-info">Valor de compra debe ser en funcion de la unidad de compra</span>
                            <span class="label label-info">Factor de rendimiento debe ser en funion de metros cuadrados</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        // Smart Wizard
        $('#wizard').smartWizard({
            labelNext: 'Siguiente', // label for Next button
            labelPrevious: 'Anterior', // label for Previous button
            labelFinish: 'Terminar',  // label for Finish button
            keyNavigation: false,
            onLeaveStep: leaveAStepCallback,
            onFinish: finishCallback,
        });

        function finishCallback() {
            if ($('#frmCrearInsumo').valid()) {
                $('#frmCrearInsumo').submit();
            }
            else {
                new PNotify({
                    title: 'Advertencia!',
                    text: 'Algunos valores no son validos. Por favor revise e intente nuevamente.',
                    type: 'error'
                });

                return false;
            }
        }

        function leaveAStepCallback() {
            if (!$('#frmCrearInsumo').valid()) {
                new PNotify({
                    title: 'Advertencia!',
                    text: 'Algunos valores no son validos. Por favor revise e intente nuevamente.',
                    type: 'error'
                });

                return false;
            }
            else {
                return true;
            }
        }
    });
</script>